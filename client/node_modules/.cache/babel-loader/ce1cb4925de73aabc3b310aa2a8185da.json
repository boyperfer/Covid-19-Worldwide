{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/data/data.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst useGetCoronoVirusData = () => {\n  // get corona data from api\n  // transform data\n  // get totals\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    // const fetchFunc = async () => {\n    // \tconst data = await fetch(\n    // \t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n    // \t);\n    // \tconst countriesData = await data.json();\n    // \tconst formattedData = countriesData.features\n    // \t\t.map(f => f.attributes)\n    // \t\t.map(f => ({\n    // \t\t\tname: f.Country_Region,\n    // \t\t\tcoordinates: [f.Lat, f.Long_],\n    // \t\t\tconfirmed: f.Confirmed,\n    // \t\t\tdeaths: f.Deaths,\n    // \t\t\trecovered: f.Recovered\n    // \t\t}));\n    // \tconsole.log(formattedData);\n    // \tsetCountries(formattedData);\n    // };\n    // fetchFunc();\n    fetch('https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true').then(data => data.json()).then(data => data.features).map(f => f.attributes).map(f => ({\n      name: f.Country_Region,\n      coordinates: [f.Lat, f.Long_],\n      confirmed: f.Confirmed,\n      deaths: f.Deaths,\n      recovered: f.Recovered\n    }));\n  }, []);\n  return [countries, {}];\n};\n\nconst Data = () => {\n  const [countries, totals] = useGetCoronoVirusData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, countries.map(({\n    name,\n    coordinates,\n    deaths,\n    recovered,\n    confirmed\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, deaths), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, recovered), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, confirmed))));\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/data/data.js"],"names":["React","useEffect","useState","useGetCoronoVirusData","countries","setCountries","fetch","then","data","json","features","map","f","attributes","name","Country_Region","coordinates","Lat","Long_","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","Data","totals"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AACnC;AACA;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAK,IAAAA,KAAK,CACJ,8RADI,CAAL,CAGEC,IAHF,CAGOC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHf,EAIEF,IAJF,CAIOC,IAAI,IAAIA,IAAI,CAACE,QAJpB,EAKEC,GALF,CAKMC,CAAC,IAAIA,CAAC,CAACC,UALb,EAMEF,GANF,CAMMC,CAAC,KAAK;AACVE,MAAAA,IAAI,EAAEF,CAAC,CAACG,cADE;AAEVC,MAAAA,WAAW,EAAE,CAACJ,CAAC,CAACK,GAAH,EAAQL,CAAC,CAACM,KAAV,CAFH;AAGVC,MAAAA,SAAS,EAAEP,CAAC,CAACQ,SAHH;AAIVC,MAAAA,MAAM,EAAET,CAAC,CAACU,MAJA;AAKVC,MAAAA,SAAS,EAAEX,CAAC,CAACY;AALH,KAAL,CANP;AAaA,GAhCQ,EAgCN,EAhCM,CAAT;AAiCA,SAAO,CAACpB,SAAD,EAAY,EAAZ,CAAP;AACA,CAvCD;;AAyCA,MAAMqB,IAAI,GAAG,MAAM;AAClB,QAAM,CAACrB,SAAD,EAAYsB,MAAZ,IAAsBvB,qBAAqB,EAAjD;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,SAAS,CAACO,GAAV,CACA,CAAC;AAAEG,IAAAA,IAAF;AAAQE,IAAAA,WAAR;AAAqBK,IAAAA,MAArB;AAA6BE,IAAAA,SAA7B;AAAwCJ,IAAAA;AAAxC,GAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,IAAN,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,MAAN,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,SAAN,CAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,SAAN,CAJD,CAFD,CADF,CADD;AAcA,CAhBD;;AAkBA,eAAeM,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst useGetCoronoVirusData = () => {\n\t// get corona data from api\n\t// transform data\n\t// get totals\n\tconst [countries, setCountries] = useState([]);\n\tuseEffect(() => {\n\t\t// const fetchFunc = async () => {\n\t\t// \tconst data = await fetch(\n\t\t// \t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n\t\t// \t);\n\t\t// \tconst countriesData = await data.json();\n\t\t// \tconst formattedData = countriesData.features\n\t\t// \t\t.map(f => f.attributes)\n\t\t// \t\t.map(f => ({\n\t\t// \t\t\tname: f.Country_Region,\n\t\t// \t\t\tcoordinates: [f.Lat, f.Long_],\n\t\t// \t\t\tconfirmed: f.Confirmed,\n\t\t// \t\t\tdeaths: f.Deaths,\n\t\t// \t\t\trecovered: f.Recovered\n\t\t// \t\t}));\n\t\t// \tconsole.log(formattedData);\n\t\t// \tsetCountries(formattedData);\n\t\t// };\n\t\t// fetchFunc();\n\t\tfetch(\n\t\t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n\t\t)\n\t\t\t.then(data => data.json())\n\t\t\t.then(data => data.features)\n\t\t\t.map(f => f.attributes)\n\t\t\t.map(f => ({\n\t\t\t\tname: f.Country_Region,\n\t\t\t\tcoordinates: [f.Lat, f.Long_],\n\t\t\t\tconfirmed: f.Confirmed,\n\t\t\t\tdeaths: f.Deaths,\n\t\t\t\trecovered: f.Recovered\n\t\t\t}));\n\t}, []);\n\treturn [countries, {}];\n};\n\nconst Data = () => {\n\tconst [countries, totals] = useGetCoronoVirusData();\n\treturn (\n\t\t<div>\n\t\t\t{countries.map(\n\t\t\t\t({ name, coordinates, deaths, recovered, confirmed }) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{name}</div>\n\t\t\t\t\t\t<div>{deaths}</div>\n\t\t\t\t\t\t<div>{recovered}</div>\n\t\t\t\t\t\t<div>{confirmed}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}