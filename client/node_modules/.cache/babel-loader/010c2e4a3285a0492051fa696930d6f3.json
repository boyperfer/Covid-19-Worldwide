{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/mark/mark.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { selectDataCorona, selectIsFetching } from '../../redux/data/data.selectors';\nimport { fetchDataStartAsync } from '../../redux/data/data.actions';\n\nconst Mark = () => {\n  const viewport = {\n    width: '100vw',\n    height: '100vh',\n    latitude: 42.430472,\n    longitude: -123.334102,\n    zoom: 16\n  };\n  const dataCorona = useSelector(selectDataCorona);\n  const isFetching = useSelector(selectIsFetching);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDataStartAsync());\n  }, [dispatch]);\n  return isFetching ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }) : /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: process.env_REACT_APP_MAPBOX_TOKEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }), dataCorona.map(({\n    coordinates\n  }, i) => /*#__PURE__*/React.createElement(Marker, {\n    key: i,\n    latitude: 123,\n    longitude: 23,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"asdf\")));\n};\n\nexport default Mark;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/mark/mark.js"],"names":["React","useEffect","useSelector","useDispatch","ReactMapGL","Marker","selectDataCorona","selectIsFetching","fetchDataStartAsync","Mark","viewport","width","height","latitude","longitude","zoom","dataCorona","isFetching","dispatch","process","env_REACT_APP_MAPBOX_TOKEN","map","coordinates","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;AAEA,SACCC,gBADD,EAECC,gBAFD,QAGO,iCAHP;AAKA,SAASC,mBAAT,QAAoC,+BAApC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAG;AAChBC,IAAAA,KAAK,EAAE,OADS;AAEhBC,IAAAA,MAAM,EAAE,OAFQ;AAGhBC,IAAAA,QAAQ,EAAE,SAHM;AAIhBC,IAAAA,SAAS,EAAE,CAAC,UAJI;AAKhBC,IAAAA,IAAI,EAAE;AALU,GAAjB;AAOA,QAAMC,UAAU,GAAGd,WAAW,CAACI,gBAAD,CAA9B;AACA,QAAMW,UAAU,GAAGf,WAAW,CAACK,gBAAD,CAA9B;AACA,QAAMW,QAAQ,GAAGf,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACfiB,IAAAA,QAAQ,CAACV,mBAAmB,EAApB,CAAR;AACA,GAFQ,EAEN,CAACU,QAAD,CAFM,CAAT;AAGA,SAAOD,UAAU,gBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,gBAGhB,oBAAC,UAAD,oBACKP,QADL;AAEC,IAAA,oBAAoB,EAAES,OAAO,CAACC,0BAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIEJ,UAAU,CAACK,GAAX,CAAe,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAkBC,CAAlB,kBACf,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,CAAb;AAAgB,IAAA,QAAQ,EAAE,GAA1B;AAA+B,IAAA,SAAS,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CAJF,CAHD;AAcA,CA5BD;;AA8BA,eAAed,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nimport {\n\tselectDataCorona,\n\tselectIsFetching\n} from '../../redux/data/data.selectors';\n\nimport { fetchDataStartAsync } from '../../redux/data/data.actions';\n\nconst Mark = () => {\n\tconst viewport = {\n\t\twidth: '100vw',\n\t\theight: '100vh',\n\t\tlatitude: 42.430472,\n\t\tlongitude: -123.334102,\n\t\tzoom: 16\n\t};\n\tconst dataCorona = useSelector(selectDataCorona);\n\tconst isFetching = useSelector(selectIsFetching);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(fetchDataStartAsync());\n\t}, [dispatch]);\n\treturn isFetching ? (\n\t\t<div />\n\t) : (\n\t\t<ReactMapGL\n\t\t\t{...viewport}\n\t\t\tmapboxApiAccessToken={process.env_REACT_APP_MAPBOX_TOKEN}\n\t\t>\n\t\t\t{dataCorona.map(({ coordinates }, i) => (\n\t\t\t\t<Marker key={i} latitude={123} longitude={23}>\n\t\t\t\t\tasdf\n\t\t\t\t</Marker>\n\t\t\t))}\n\t\t</ReactMapGL>\n\t);\n};\n\nexport default Mark;\n"]},"metadata":{},"sourceType":"module"}