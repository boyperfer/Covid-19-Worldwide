{"ast":null,"code":"import DataActionTypes from './data.types';\nexport const fetchDataStart = () => ({\n  type: DataActionTypes.FETCH_DATA_START\n});\nexport const fetchDataSuccess = data => ({\n  type: DataActionTypes.FETCH_DATA_SUCCESS,\n  payload: data\n});\nexport const fetchDataFailure = err => ({\n  type: DataActionTypes.FETCH_DATA_FAILURE,\n  payload: err\n});\nexport const fetchDataStartAsync = () => {\n  return dispatch => {\n    dispatch(fetchDataStart());\n    fetch('https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true').then(data => data.json()).then(data => {\n      const formattedData = data.features.map(f => f.attributes).map(f => ({\n        name: f.Country_Region,\n        coordinates: [f.Lat, f.Long_],\n        confirmed: f.Confirmed,\n        deaths: f.Deaths,\n        recovered: f.Recovered\n      }));\n      dispatch(fetchDataSuccess(formattedData));\n    }).catch(err => fetchDataFailure(err));\n  };\n};","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/redux/data/data.actions.js"],"names":["DataActionTypes","fetchDataStart","type","FETCH_DATA_START","fetchDataSuccess","data","FETCH_DATA_SUCCESS","payload","fetchDataFailure","err","FETCH_DATA_FAILURE","fetchDataStartAsync","dispatch","fetch","then","json","formattedData","features","map","f","attributes","name","Country_Region","coordinates","Lat","Long_","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","catch"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADc,CAAP,CAAvB;AAIP,OAAO,MAAMC,gBAAgB,GAAGC,IAAI,KAAK;AACxCH,EAAAA,IAAI,EAAEF,eAAe,CAACM,kBADkB;AAExCC,EAAAA,OAAO,EAAEF;AAF+B,CAAL,CAA7B;AAKP,OAAO,MAAMG,gBAAgB,GAAGC,GAAG,KAAK;AACvCP,EAAAA,IAAI,EAAEF,eAAe,CAACU,kBADiB;AAEvCH,EAAAA,OAAO,EAAEE;AAF8B,CAAL,CAA5B;AAKP,OAAO,MAAME,mBAAmB,GAAG,MAAM;AACxC,SAAOC,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACX,cAAc,EAAf,CAAR;AACAY,IAAAA,KAAK,CACJ,8RADI,CAAL,CAGEC,IAHF,CAGOT,IAAI,IAAIA,IAAI,CAACU,IAAL,EAHf,EAIED,IAJF,CAIOT,IAAI,IAAI;AACb,YAAMW,aAAa,GAAGX,IAAI,CAACY,QAAL,CACpBC,GADoB,CAChBC,CAAC,IAAIA,CAAC,CAACC,UADS,EAEpBF,GAFoB,CAEhBC,CAAC,KAAK;AACVE,QAAAA,IAAI,EAAEF,CAAC,CAACG,cADE;AAEVC,QAAAA,WAAW,EAAE,CAACJ,CAAC,CAACK,GAAH,EAAQL,CAAC,CAACM,KAAV,CAFH;AAGVC,QAAAA,SAAS,EAAEP,CAAC,CAACQ,SAHH;AAIVC,QAAAA,MAAM,EAAET,CAAC,CAACU,MAJA;AAKVC,QAAAA,SAAS,EAAEX,CAAC,CAACY;AALH,OAAL,CAFe,CAAtB;AASAnB,MAAAA,QAAQ,CAACR,gBAAgB,CAACY,aAAD,CAAjB,CAAR;AACA,KAfF,EAgBEgB,KAhBF,CAgBQvB,GAAG,IAAID,gBAAgB,CAACC,GAAD,CAhB/B;AAiBA,GAnBD;AAoBA,CArBM","sourcesContent":["import DataActionTypes from './data.types';\n\nexport const fetchDataStart = () => ({\n\ttype: DataActionTypes.FETCH_DATA_START\n});\n\nexport const fetchDataSuccess = data => ({\n\ttype: DataActionTypes.FETCH_DATA_SUCCESS,\n\tpayload: data\n});\n\nexport const fetchDataFailure = err => ({\n\ttype: DataActionTypes.FETCH_DATA_FAILURE,\n\tpayload: err\n});\n\nexport const fetchDataStartAsync = () => {\n\treturn dispatch => {\n\t\tdispatch(fetchDataStart());\n\t\tfetch(\n\t\t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n\t\t)\n\t\t\t.then(data => data.json())\n\t\t\t.then(data => {\n\t\t\t\tconst formattedData = data.features\n\t\t\t\t\t.map(f => f.attributes)\n\t\t\t\t\t.map(f => ({\n\t\t\t\t\t\tname: f.Country_Region,\n\t\t\t\t\t\tcoordinates: [f.Lat, f.Long_],\n\t\t\t\t\t\tconfirmed: f.Confirmed,\n\t\t\t\t\t\tdeaths: f.Deaths,\n\t\t\t\t\t\trecovered: f.Recovered\n\t\t\t\t\t}));\n\t\t\t\tdispatch(fetchDataSuccess(formattedData));\n\t\t\t})\n\t\t\t.catch(err => fetchDataFailure(err));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}