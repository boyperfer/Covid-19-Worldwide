{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/map/map.component.js\";\n\n/* eslint-disable react/style-prop-object */\nimport React, { useState, useEffect } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDataCorona, selectIsFetching } from '../../redux/data/data.selectors';\nimport { selectToggleNumber } from '../../redux/toggle-hidden/toggle-hidden.selectors';\nimport { fetchDataStartAsync } from '../../redux/data/data.actions';\nimport { toggleNumber } from '../../redux/toggle-hidden/toggle-hidden.actions';\nimport Mark from '../mark/mark.component';\nimport { CircleContainer } from '../mark/mark.style';\nconst MapGl = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_TOKEN\n});\n\nconst Map = () => {\n  const [viewPort, setViewPort] = useState({\n    latitude: 37.8,\n    longitude: -122.4,\n    width: '100vw',\n    height: '100vh'\n  });\n  const dataCorona = useSelector(selectDataCorona);\n  const onToggleNumber = useSelector(selectToggleNumber);\n  const isFetching = useSelector(selectIsFetching);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDataStartAsync());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MapGl, {\n    style: \"mapbox://styles/boyperfer/ck8c3jmqk2mjy1iqitxwkd1b6\",\n    containerStyle: {\n      height: '100vh',\n      width: '100vw',\n      latitude: 37.8,\n      longitude: -122.4\n    },\n    zoom: [1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }), isFetching ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }) : dataCorona.map(({\n    coordinates\n  }) => /*#__PURE__*/React.createElement(Layer, {\n    type: \"sympol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Feature, {\n    coordinates: [coordinates[0], coordinates[1]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }))));\n};\n\nexport default Map;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/map/map.component.js"],"names":["React","useState","useEffect","ReactMapboxGl","Layer","Feature","useDispatch","useSelector","selectDataCorona","selectIsFetching","selectToggleNumber","fetchDataStartAsync","toggleNumber","Mark","CircleContainer","MapGl","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","Map","viewPort","setViewPort","latitude","longitude","width","height","dataCorona","onToggleNumber","isFetching","dispatch","map","coordinates"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,IAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,iBAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SACCC,gBADD,EAECC,gBAFD,QAGO,iCAHP;AAIA,SAASC,kBAAT,QAAmC,mDAAnC;AAEA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,YAAT,QAA6B,iDAA7B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,MAAMC,KAAK,GAAGZ,aAAa,CAAC;AAC3Ba,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADE,CAAD,CAA3B;;AAIA,MAAMC,GAAG,GAAG,MAAM;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC;AACxCsB,IAAAA,QAAQ,EAAE,IAD8B;AAExCC,IAAAA,SAAS,EAAE,CAAC,KAF4B;AAIxCC,IAAAA,KAAK,EAAE,OAJiC;AAKxCC,IAAAA,MAAM,EAAE;AALgC,GAAD,CAAxC;AAOA,QAAMC,UAAU,GAAGpB,WAAW,CAACC,gBAAD,CAA9B;AACA,QAAMoB,cAAc,GAAGrB,WAAW,CAACG,kBAAD,CAAlC;AACA,QAAMmB,UAAU,GAAGtB,WAAW,CAACE,gBAAD,CAA9B;AACA,QAAMqB,QAAQ,GAAGxB,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACf4B,IAAAA,QAAQ,CAACnB,mBAAmB,EAApB,CAAR;AACA,GAFQ,EAEN,CAACmB,QAAD,CAFM,CAAT;AAGA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AACC,IAAA,KAAK,EAAC,qDADP;AAEC,IAAA,cAAc,EAAE;AACfJ,MAAAA,MAAM,EAAE,OADO;AAEfD,MAAAA,KAAK,EAAE,OAFQ;AAGfF,MAAAA,QAAQ,EAAE,IAHK;AAIfC,MAAAA,SAAS,EAAE,CAAC;AAJG,KAFjB;AAQC,IAAA,IAAI,EAAE,CAAC,CAAD,CARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAWEK,UAAU,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAGVF,UAAU,CAACI,GAAX,CAAe,CAAC;AAAEC,IAAAA;AAAF,GAAD,kBACd,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AACC,IAAA,WAAW,EAAE,CAACA,WAAW,CAAC,CAAD,CAAZ,EAAiBA,WAAW,CAAC,CAAD,CAA5B,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,CAdF,CADD;AAyBA,CAxCD;;AA0CA,eAAeZ,GAAf","sourcesContent":["/* eslint-disable react/style-prop-object */\nimport React, { useState, useEffect } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n\tselectDataCorona,\n\tselectIsFetching\n} from '../../redux/data/data.selectors';\nimport { selectToggleNumber } from '../../redux/toggle-hidden/toggle-hidden.selectors';\n\nimport { fetchDataStartAsync } from '../../redux/data/data.actions';\nimport { toggleNumber } from '../../redux/toggle-hidden/toggle-hidden.actions';\n\nimport Mark from '../mark/mark.component';\n\nimport { CircleContainer } from '../mark/mark.style';\n\nconst MapGl = ReactMapboxGl({\n\taccessToken: process.env.REACT_APP_MAPBOX_TOKEN\n});\n\nconst Map = () => {\n\tconst [viewPort, setViewPort] = useState({\n\t\tlatitude: 37.8,\n\t\tlongitude: -122.4,\n\n\t\twidth: '100vw',\n\t\theight: '100vh'\n\t});\n\tconst dataCorona = useSelector(selectDataCorona);\n\tconst onToggleNumber = useSelector(selectToggleNumber);\n\tconst isFetching = useSelector(selectIsFetching);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(fetchDataStartAsync());\n\t}, [dispatch]);\n\treturn (\n\t\t<div>\n\t\t\t<MapGl\n\t\t\t\tstyle='mapbox://styles/boyperfer/ck8c3jmqk2mjy1iqitxwkd1b6'\n\t\t\t\tcontainerStyle={{\n\t\t\t\t\theight: '100vh',\n\t\t\t\t\twidth: '100vw',\n\t\t\t\t\tlatitude: 37.8,\n\t\t\t\t\tlongitude: -122.4\n\t\t\t\t}}\n\t\t\t\tzoom={[1]}\n\t\t\t/>\n\t\t\t{isFetching ? (\n\t\t\t\t<div></div>\n\t\t\t) : (\n\t\t\t\tdataCorona.map(({ coordinates }) => (\n\t\t\t\t\t<Layer type='sympol'>\n\t\t\t\t\t\t<Feature\n\t\t\t\t\t\t\tcoordinates={[coordinates[0], coordinates[1]]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Layer>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}