{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/data/data.js\";\nimport React, { useEffect, useState } from 'react';\n\nconst useGetCoronoVirusData = () => {\n  // get corona data from api\n  // transform data\n  // get totals\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    const fetchFunc = async () => {\n      const data = await fetch('https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true');\n      const countriesData = await data.json();\n      const formattedData = countriesData.features.map(f => f.attributes).map(f => ({\n        name: f.Country_Region,\n        coordinates: [f.Lat, f.Long_],\n        confirmed: f.Confirmed,\n        deaths: f.Deaths,\n        recovered: f.Recovered\n      }));\n      console.log(formattedData);\n      setCountries(formattedData);\n    };\n\n    fetchFunc();\n  }, []);\n  return [countries, {}];\n};\n\nconst Data = () => {\n  const [countries, totals] = useGetCoronoVirusData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, console.log(totals), countries.map(({\n    name,\n    coordinates,\n    deaths,\n    recovered,\n    confirmed\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, deaths), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, recovered), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, confirmed))));\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/data/data.js"],"names":["React","useEffect","useState","useGetCoronoVirusData","countries","setCountries","fetchFunc","data","fetch","countriesData","json","formattedData","features","map","f","attributes","name","Country_Region","coordinates","Lat","Long_","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","console","log","Data","totals"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AACnC;AACA;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMK,SAAS,GAAG,YAAY;AAC7B,YAAMC,IAAI,GAAG,MAAMC,KAAK,CACvB,8RADuB,CAAxB;AAGA,YAAMC,aAAa,GAAG,MAAMF,IAAI,CAACG,IAAL,EAA5B;AACA,YAAMC,aAAa,GAAGF,aAAa,CAACG,QAAd,CACpBC,GADoB,CAChBC,CAAC,IAAIA,CAAC,CAACC,UADS,EAEpBF,GAFoB,CAEhBC,CAAC,KAAK;AACVE,QAAAA,IAAI,EAAEF,CAAC,CAACG,cADE;AAEVC,QAAAA,WAAW,EAAE,CAACJ,CAAC,CAACK,GAAH,EAAQL,CAAC,CAACM,KAAV,CAFH;AAGVC,QAAAA,SAAS,EAAEP,CAAC,CAACQ,SAHH;AAIVC,QAAAA,MAAM,EAAET,CAAC,CAACU,MAJA;AAKVC,QAAAA,SAAS,EAAEX,CAAC,CAACY;AALH,OAAL,CAFe,CAAtB;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,aAAZ;AACAN,MAAAA,YAAY,CAACM,aAAD,CAAZ;AACA,KAhBD;;AAiBAL,IAAAA,SAAS;AACT,GAnBQ,EAmBN,EAnBM,CAAT;AAoBA,SAAO,CAACF,SAAD,EAAY,EAAZ,CAAP;AACA,CA1BD;;AA4BA,MAAMyB,IAAI,GAAG,MAAM;AAClB,QAAM,CAACzB,SAAD,EAAY0B,MAAZ,IAAsB3B,qBAAqB,EAAjD;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEwB,OAAO,CAACC,GAAR,CAAYE,MAAZ,CADF,EAEE1B,SAAS,CAACS,GAAV,CACA,CAAC;AAAEG,IAAAA,IAAF;AAAQE,IAAAA,WAAR;AAAqBK,IAAAA,MAArB;AAA6BE,IAAAA,SAA7B;AAAwCJ,IAAAA;AAAxC,GAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAML,IAAN,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,MAAN,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,SAAN,CAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,SAAN,CAJD,CAFD,CAFF,CADD;AAeA,CAjBD;;AAmBA,eAAeQ,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst useGetCoronoVirusData = () => {\n\t// get corona data from api\n\t// transform data\n\t// get totals\n\tconst [countries, setCountries] = useState([]);\n\tuseEffect(() => {\n\t\tconst fetchFunc = async () => {\n\t\t\tconst data = await fetch(\n\t\t\t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n\t\t\t);\n\t\t\tconst countriesData = await data.json();\n\t\t\tconst formattedData = countriesData.features\n\t\t\t\t.map(f => f.attributes)\n\t\t\t\t.map(f => ({\n\t\t\t\t\tname: f.Country_Region,\n\t\t\t\t\tcoordinates: [f.Lat, f.Long_],\n\t\t\t\t\tconfirmed: f.Confirmed,\n\t\t\t\t\tdeaths: f.Deaths,\n\t\t\t\t\trecovered: f.Recovered\n\t\t\t\t}));\n\t\t\tconsole.log(formattedData);\n\t\t\tsetCountries(formattedData);\n\t\t};\n\t\tfetchFunc();\n\t}, []);\n\treturn [countries, {}];\n};\n\nconst Data = () => {\n\tconst [countries, totals] = useGetCoronoVirusData();\n\treturn (\n\t\t<div>\n\t\t\t{console.log(totals)}\n\t\t\t{countries.map(\n\t\t\t\t({ name, coordinates, deaths, recovered, confirmed }) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{name}</div>\n\t\t\t\t\t\t<div>{deaths}</div>\n\t\t\t\t\t\t<div>{recovered}</div>\n\t\t\t\t\t\t<div>{confirmed}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}