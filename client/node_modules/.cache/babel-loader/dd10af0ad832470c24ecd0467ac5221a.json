{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/data/data.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectDataCorona } from '../../redux/data/data.selectors';\n\nconst useGetCoronoVirusData = () => {\n  // get corona data from api\n  // transform data\n  // get totals\n  const [countries, setCountries] = useState([]);\n  const dataCorona = useSelector();\n  useEffect(() => {// const fetchFunc = async () => {\n    // \tconst data = await fetch(\n    // \t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n    // \t);\n    // \tconst countriesData = await data.json();\n    // \tconst formattedData = countriesData.features\n    // \t\t.map(f => f.attributes)\n    // \t\t.map(f => ({\n    // \t\t\tname: f.Country_Region,\n    // \t\t\tcoordinates: [f.Lat, f.Long_],\n    // \t\t\tconfirmed: f.Confirmed,\n    // \t\t\tdeaths: f.Deaths,\n    // \t\t\trecovered: f.Recovered\n    // \t\t}));\n    // \tconsole.log(formattedData);\n    // \tsetCountries(formattedData);\n    // };\n    // fetchFunc();\n    // fetch(\n    // \t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n    // )\n    // \t.then(data => data.json())\n    // \t.then(data => {\n    // \t\tconst formattedData = data.features\n    // \t\t\t.map(f => f.attributes)\n    // \t\t\t.map(f => ({\n    // \t\t\t\tname: f.Country_Region,\n    // \t\t\t\tcoordinates: [f.Lat, f.Long_],\n    // \t\t\t\tconfirmed: f.Confirmed,\n    // \t\t\t\tdeaths: f.Deaths,\n    // \t\t\t\trecovered: f.Recovered\n    // \t\t\t}));\n    // \t\tconsole.log(formattedData);\n    // \t});\n  }, []);\n  return [countries, {}];\n};\n\nconst Data = () => {\n  const [countries, totals] = useGetCoronoVirusData();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, countries.map(({\n    name,\n    coordinates,\n    deaths,\n    recovered,\n    confirmed\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, deaths), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, recovered), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, confirmed))));\n};\n\nexport default Data;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/data/data.js"],"names":["React","useEffect","useState","useSelector","selectDataCorona","useGetCoronoVirusData","countries","setCountries","dataCorona","Data","totals","map","name","coordinates","deaths","recovered","confirmed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AACnC;AACA;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMM,UAAU,GAAGL,WAAW,EAA9B;AACAF,EAAAA,SAAS,CAAC,MAAM,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnCQ,EAmCN,EAnCM,CAAT;AAoCA,SAAO,CAACK,SAAD,EAAY,EAAZ,CAAP;AACA,CA3CD;;AA6CA,MAAMG,IAAI,GAAG,MAAM;AAClB,QAAM,CAACH,SAAD,EAAYI,MAAZ,IAAsBL,qBAAqB,EAAjD;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,SAAS,CAACK,GAAV,CACA,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,GAAD,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,IAAN,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,MAAN,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,SAAN,CAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,SAAN,CAJD,CAFD,CADF,CADD;AAcA,CAhBD;;AAkBA,eAAeP,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectDataCorona } from '../../redux/data/data.selectors';\n\nconst useGetCoronoVirusData = () => {\n\t// get corona data from api\n\t// transform data\n\t// get totals\n\tconst [countries, setCountries] = useState([]);\n\tconst dataCorona = useSelector();\n\tuseEffect(() => {\n\t\t// const fetchFunc = async () => {\n\t\t// \tconst data = await fetch(\n\t\t// \t\t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n\t\t// \t);\n\t\t// \tconst countriesData = await data.json();\n\t\t// \tconst formattedData = countriesData.features\n\t\t// \t\t.map(f => f.attributes)\n\t\t// \t\t.map(f => ({\n\t\t// \t\t\tname: f.Country_Region,\n\t\t// \t\t\tcoordinates: [f.Lat, f.Long_],\n\t\t// \t\t\tconfirmed: f.Confirmed,\n\t\t// \t\t\tdeaths: f.Deaths,\n\t\t// \t\t\trecovered: f.Recovered\n\t\t// \t\t}));\n\t\t// \tconsole.log(formattedData);\n\t\t// \tsetCountries(formattedData);\n\t\t// };\n\t\t// fetchFunc();\n\t\t// fetch(\n\t\t// \t'https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/2/query?f=json&where=Confirmed%20%3E%200&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc&resultOffset=0&resultRecordCount=200&cacheHint=true'\n\t\t// )\n\t\t// \t.then(data => data.json())\n\t\t// \t.then(data => {\n\t\t// \t\tconst formattedData = data.features\n\t\t// \t\t\t.map(f => f.attributes)\n\t\t// \t\t\t.map(f => ({\n\t\t// \t\t\t\tname: f.Country_Region,\n\t\t// \t\t\t\tcoordinates: [f.Lat, f.Long_],\n\t\t// \t\t\t\tconfirmed: f.Confirmed,\n\t\t// \t\t\t\tdeaths: f.Deaths,\n\t\t// \t\t\t\trecovered: f.Recovered\n\t\t// \t\t\t}));\n\t\t// \t\tconsole.log(formattedData);\n\t\t// \t});\n\t}, []);\n\treturn [countries, {}];\n};\n\nconst Data = () => {\n\tconst [countries, totals] = useGetCoronoVirusData();\n\treturn (\n\t\t<div>\n\t\t\t{countries.map(\n\t\t\t\t({ name, coordinates, deaths, recovered, confirmed }) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{name}</div>\n\t\t\t\t\t\t<div>{deaths}</div>\n\t\t\t\t\t\t<div>{recovered}</div>\n\t\t\t\t\t\t<div>{confirmed}</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Data;\n"]},"metadata":{},"sourceType":"module"}