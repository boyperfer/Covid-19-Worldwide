{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/circle/circle.component.js\";\n\n/* eslint-disable no-useless-escape */\nimport React from 'react';\nimport { Feature, Marker, Layer } from 'react-mapbox-gl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectDataCorona } from '../../redux/data/data.selectors';\nimport { popupToggleClick, popupToggleHover } from '../../redux/popup/popup.actions';\nimport { mobileAndTabletcheck } from '../../assets/utils/utils';\nimport { CoronaContainer } from './circle.style';\nimport coronaIcon from '../../assets/icon/resign_corona.png';\n\nconst Circle = () => {\n  const dataCorona = useSelector(selectDataCorona);\n  const dispatch = useDispatch(); // device detection\n\n  const mobileCheck = mobileAndTabletcheck();\n  return dataCorona.map((country, i) => {\n    const {\n      name,\n      coordinates,\n      confirmed\n    } = country;\n    const paint = {\n      'circle-color': 'red',\n      'circle-radius': confirmed > 0 && confirmed <= 1000 ? 5 : confirmed > 1000 && confirmed <= 10000 ? 10 : confirmed > 10000 && confirmed <= 50000 ? 15 : confirmed > 50000 && confirmed <= 100000 ? 20 : 30\n    };\n    return name.toLowerCase() === 'china' ? mobileCheck ? /*#__PURE__*/React.createElement(Marker, {\n      key: i,\n      coordinates: [105, 25],\n      onClick: () => dispatch(popupToggleClick(country)),\n      onMouseEnter: () => dispatch(popupToggleHover(country)),\n      anchor: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CoronaContainer, {\n      src: coronaIcon,\n      alt: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 6\n      }\n    })) : /*#__PURE__*/React.createElement(Marker, {\n      key: i,\n      coordinates: [105, 25],\n      onClick: () => dispatch(popupToggleClick(country)),\n      onMouseEnter: () => dispatch(popupToggleHover(country)),\n      anchor: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CoronaContainer, {\n      src: coronaIcon,\n      alt: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    })) : /*#__PURE__*/React.createElement(Layer, {\n      key: i,\n      type: \"circle\",\n      paint: paint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }\n    }, mobileCheck ? /*#__PURE__*/React.createElement(Feature, {\n      onClick: () => dispatch(popupToggleClick(country)),\n      coordinates: [coordinates[0], coordinates[1]],\n      properties: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }\n    }) : /*#__PURE__*/React.createElement(Feature, {\n      onClick: () => dispatch(popupToggleClick(country)),\n      onMouseEnter: () => dispatch(popupToggleHover(country)),\n      coordinates: [coordinates[0], coordinates[1]],\n      properties: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }\n    }));\n  });\n};\n\nexport default Circle;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/circle/circle.component.js"],"names":["React","Feature","Marker","Layer","useDispatch","useSelector","selectDataCorona","popupToggleClick","popupToggleHover","mobileAndTabletcheck","CoronaContainer","coronaIcon","Circle","dataCorona","dispatch","mobileCheck","map","country","i","name","coordinates","confirmed","paint","toLowerCase"],"mappings":"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","sourcesContent":["/* eslint-disable no-useless-escape */\nimport React from 'react';\nimport { Feature, Marker, Layer } from 'react-mapbox-gl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectDataCorona } from '../../redux/data/data.selectors';\nimport {\n\tpopupToggleClick,\n\tpopupToggleHover\n} from '../../redux/popup/popup.actions';\n\nimport { mobileAndTabletcheck } from '../../assets/utils/utils';\n\nimport { CoronaContainer } from './circle.style';\nimport coronaIcon from '../../assets/icon/resign_corona.png';\n\nconst Circle = () => {\n\tconst dataCorona = useSelector(selectDataCorona);\n\n\tconst dispatch = useDispatch();\n\t// device detection\n\tconst mobileCheck = mobileAndTabletcheck();\n\treturn dataCorona.map((country, i) => {\n\t\tconst { name, coordinates, confirmed } = country;\n\t\tconst paint = {\n\t\t\t'circle-color': 'red',\n\t\t\t'circle-radius':\n\t\t\t\tconfirmed > 0 && confirmed <= 1000\n\t\t\t\t\t? 5\n\t\t\t\t\t: confirmed > 1000 && confirmed <= 10000\n\t\t\t\t\t? 10\n\t\t\t\t\t: confirmed > 10000 && confirmed <= 50000\n\t\t\t\t\t? 15\n\t\t\t\t\t: confirmed > 50000 && confirmed <= 100000\n\t\t\t\t\t? 20\n\t\t\t\t\t: 30\n\t\t};\n\t\treturn name.toLowerCase() === 'china' ? (\n\t\t\tmobileCheck ? (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={i}\n\t\t\t\t\tcoordinates={[105, 25]}\n\t\t\t\t\tonClick={() => dispatch(popupToggleClick(country))}\n\t\t\t\t\tonMouseEnter={() => dispatch(popupToggleHover(country))}\n\t\t\t\t\tanchor='bottom'\n\t\t\t\t>\n\t\t\t\t\t<CoronaContainer src={coronaIcon} alt='1' />\n\t\t\t\t</Marker>\n\t\t\t) : (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={i}\n\t\t\t\t\tcoordinates={[105, 25]}\n\t\t\t\t\tonClick={() => dispatch(popupToggleClick(country))}\n\t\t\t\t\tonMouseEnter={() => dispatch(popupToggleHover(country))}\n\t\t\t\t\tanchor='bottom'\n\t\t\t\t>\n\t\t\t\t\t<CoronaContainer src={coronaIcon} alt='1' />\n\t\t\t\t</Marker>\n\t\t\t)\n\t\t) : (\n\t\t\t<Layer key={i} type='circle' paint={paint}>\n\t\t\t\t{mobileCheck ? (\n\t\t\t\t\t<Feature\n\t\t\t\t\t\tonClick={() => dispatch(popupToggleClick(country))}\n\t\t\t\t\t\tcoordinates={[coordinates[0], coordinates[1]]}\n\t\t\t\t\t\tproperties={name}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<Feature\n\t\t\t\t\t\tonClick={() => dispatch(popupToggleClick(country))}\n\t\t\t\t\t\tonMouseEnter={() => dispatch(popupToggleHover(country))}\n\t\t\t\t\t\tcoordinates={[coordinates[0], coordinates[1]]}\n\t\t\t\t\t\tproperties={name}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Layer>\n\t\t);\n\t});\n};\n\nexport default Circle;\n"]},"metadata":{},"sourceType":"module"}