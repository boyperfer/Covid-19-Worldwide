{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar DEFAULT_CDN_URL = 'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/';\nvar DEFAULT_CDN_SUFFIX = 'svg'; // offset between uppercase ascii and regional indicator symbols\n\nvar OFFSET = 127397;\n\nfunction ReactCountryFlag(_ref) {\n  var cdnSuffix = _ref.cdnSuffix,\n      cdnUrl = _ref.cdnUrl,\n      countryCode = _ref.countryCode,\n      style = _ref.style,\n      svg = _ref.svg,\n      props = objectWithoutProperties(_ref, ['cdnSuffix', 'cdnUrl', 'countryCode', 'style', 'svg']);\n\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    var flagUrl = '' + cdnUrl + countryCode.toLowerCase() + '.' + DEFAULT_CDN_SUFFIX;\n    return React.createElement('img', _extends({}, props, {\n      src: flagUrl,\n      style: _extends({\n        display: 'inline-block',\n        width: '1em',\n        height: '1em',\n        verticalAlign: 'middle'\n      }, style)\n    }));\n  }\n\n  var emoji = countryCode.toUpperCase().replace(/./g, function (char) {\n    return String.fromCodePoint(char.charCodeAt(0) + OFFSET);\n  });\n  return React.createElement('span', _extends({\n    role: 'img'\n  }, props, {\n    style: _extends({\n      display: 'inline-block',\n      fontSize: '1em',\n      lineHeight: '1em',\n      verticalAlign: 'middle'\n    }, style)\n  }), emoji);\n}\n\nReactCountryFlag.propTypes = {\n  cdnUrl: PropTypes.string,\n  countryCode: PropTypes.string.isRequired,\n  style: PropTypes.object,\n  svg: PropTypes.bool\n};\nReactCountryFlag.defaultProps = {\n  cdnUrl: DEFAULT_CDN_URL,\n  svg: false\n};\nexport default ReactCountryFlag;","map":{"version":3,"sources":["../src/index.js"],"names":["DEFAULT_CDN_URL","DEFAULT_CDN_SUFFIX","OFFSET","cdnSuffix","cdnUrl","countryCode","style","svg","props","flagUrl","emoji","String","char","ReactCountryFlag","PropTypes","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,eAAAA,GAAN,uEAAA;AAEA,IAAMC,kBAAAA,GAAN,KAAA,C;;AAGA,IAAMC,MAAAA,GAAN,MAAA;;AAEA,SAAA,gBAAA,CAAA,IAAA,EAOG;MANCC,SAMD,GAAA,IAAA,CANCA,S;MACAC,MAKD,GAAA,IAAA,CALCA,M;MACAC,WAID,GAAA,IAAA,CAJCA,W;MACAC,KAGD,GAAA,IAAA,CAHCA,K;MACAC,GAED,GAAA,IAAA,CAFCA,G;MACGC,KACJ,GAAA,uBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,aAAA,EAAA,OAAA,EAAA,KAAA,CAAA,C;;MACK,OAAA,WAAA,KAAJ,Q,EAAqC;WACjC,I;;;MAGJ,G,EAAS;QACCC,OAAAA,GAAAA,KAAAA,MAAAA,GAAsBJ,WAAAA,CAAtBI,WAAsBJ,EAAtBI,GAAAA,GAAAA,GAAN,kB;WAGI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;WAAA,OAAA;;iBAGI,c;eAAA,K;gBAAA,K;uBAImB;SAJnB,K;AAHJ,KAAA,CAAA,C;;;MAcFC,KAAAA,GAAQ,WAAA,CAAA,WAAA,GAAA,OAAA,CAAA,IAAA,EAEK,UAAA,IAAA,EAAA;WACXC,MAAAA,CAAAA,aAAAA,CAAqBC,IAAAA,CAAAA,UAAAA,CAAAA,CAAAA,IADV,MACXD,C;AAHR,GAAc,C;SAOV,KAAA,CAAA,aAAA,C,MAAA,E;UACS;KADT,K,EAAA;;eAGI,c;gBAAA,K;kBAAA,K;qBAImB;OAJnB,K;AAHJ,G,CAAA,E,KAAA,C;;;AAgBRE,gBAAAA,CAAAA,SAAAA,GAA6B;UACjBC,SAAAA,CADiB,MAAA;eAEZA,SAAAA,CAAAA,MAAAA,CAFY,UAAA;SAGlBA,SAAAA,CAHkB,MAAA;OAIpBA,SAAAA,CAAUC;AAJU,CAA7BF;AAOAA,gBAAAA,CAAAA,YAAAA,GAAgC;UAAA,eAAA;OAEvB;AAFuB,CAAhCA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst DEFAULT_CDN_URL =\n    'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/'\nconst DEFAULT_CDN_SUFFIX = 'svg'\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397\n\nfunction ReactCountryFlag({\n    cdnSuffix,\n    cdnUrl,\n    countryCode,\n    style,\n    svg,\n    ...props\n}) {\n    if (typeof countryCode !== 'string') {\n        return null\n    }\n\n    if (svg) {\n        const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${DEFAULT_CDN_SUFFIX}`\n\n        return (\n            <img\n                {...props}\n                src={flagUrl}\n                style={{\n                    display: 'inline-block',\n                    width: '1em',\n                    height: '1em',\n                    verticalAlign: 'middle',\n                    ...style\n                }}\n            />\n        )\n    }\n\n    const emoji = countryCode\n        .toUpperCase()\n        .replace(/./g, (char) =>\n            String.fromCodePoint(char.charCodeAt(0) + OFFSET)\n        )\n\n    return (\n        <span\n            role=\"img\"\n            {...props}\n            style={{\n                display: 'inline-block',\n                fontSize: '1em',\n                lineHeight: '1em',\n                verticalAlign: 'middle',\n                ...style\n            }}\n        >\n            {emoji}\n        </span>\n    )\n}\n\nReactCountryFlag.propTypes = {\n    cdnUrl: PropTypes.string,\n    countryCode: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    svg: PropTypes.bool\n}\n\nReactCountryFlag.defaultProps = {\n    cdnUrl: DEFAULT_CDN_URL,\n    svg: false\n}\n\nexport default ReactCountryFlag\n"]},"metadata":{},"sourceType":"module"}