{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.createStoreHook = createStoreHook;\nexports.useStore = void 0;\n\nvar _react = require(\"react\");\n\nvar _Context = require(\"../components/Context\");\n\nvar _useReduxContext2 = require(\"./useReduxContext\");\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\n\nfunction createStoreHook(context) {\n  if (context === void 0) {\n    context = _Context.ReactReduxContext;\n  }\n\n  var useReduxContext = context === _Context.ReactReduxContext ? _useReduxContext2.useReduxContext : function () {\n    return (0, _react.useContext)(context);\n  };\n  return function useStore() {\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\n\nvar useStore = /*#__PURE__*/createStoreHook();\nexports.useStore = useStore;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/node_modules/react-redux/lib/hooks/useStore.js"],"names":["exports","__esModule","createStoreHook","useStore","_react","require","_Context","_useReduxContext2","context","ReactReduxContext","useReduxContext","useContext","_useReduxContext","store"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;AACAF,OAAO,CAACG,QAAR,GAAmB,KAAK,CAAxB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAD,CAAtB;;AAEA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAA/B;AAEA;;;;;;;;AAMA,SAASH,eAAT,CAAyBM,OAAzB,EAAkC;AAChC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAGF,QAAQ,CAACG,iBAAnB;AACD;;AAED,MAAIC,eAAe,GAAGF,OAAO,KAAKF,QAAQ,CAACG,iBAArB,GAAyCF,iBAAiB,CAACG,eAA3D,GAA6E,YAAY;AAC7G,WAAO,CAAC,GAAGN,MAAM,CAACO,UAAX,EAAuBH,OAAvB,CAAP;AACD,GAFD;AAGA,SAAO,SAASL,QAAT,GAAoB;AACzB,QAAIS,gBAAgB,GAAGF,eAAe,EAAtC;AAAA,QACIG,KAAK,GAAGD,gBAAgB,CAACC,KAD7B;;AAGA,WAAOA,KAAP;AACD,GALD;AAMD;AACD;;;;;;;;;;;;;;;;;AAiBA,IAAIV,QAAQ,GACZ,aACAD,eAAe,EAFf;AAGAF,OAAO,CAACG,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.createStoreHook = createStoreHook;\nexports.useStore = void 0;\n\nvar _react = require(\"react\");\n\nvar _Context = require(\"../components/Context\");\n\nvar _useReduxContext2 = require(\"./useReduxContext\");\n\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\nfunction createStoreHook(context) {\n  if (context === void 0) {\n    context = _Context.ReactReduxContext;\n  }\n\n  var useReduxContext = context === _Context.ReactReduxContext ? _useReduxContext2.useReduxContext : function () {\n    return (0, _react.useContext)(context);\n  };\n  return function useStore() {\n    var _useReduxContext = useReduxContext(),\n        store = _useReduxContext.store;\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\n\nvar useStore =\n/*#__PURE__*/\ncreateStoreHook();\nexports.useStore = useStore;"]},"metadata":{},"sourceType":"script"}