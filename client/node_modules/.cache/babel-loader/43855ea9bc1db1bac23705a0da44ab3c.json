{"ast":null,"code":"var _jsxFileName = \"/Users/vnfreedomboy/Desktop/map-react/src/component/mark/mark.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { selectDataCorona, selectIsFetching } from '../../redux/data/data.selectors';\nimport { fetchDataStartAsync } from '../../redux/data/data.actions';\nimport { NumberContainer } from '../mark/mark.style';\n\nconst Mark = () => {\n  const [viewPort, setViewPort] = useState({\n    latitude: 37.8,\n    longitude: -122.4,\n    zoom: 2,\n    width: '100vw',\n    height: '100vh'\n  });\n  const dataCorona = useSelector(selectDataCorona);\n  const isFetching = useSelector(selectIsFetching);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDataStartAsync());\n  }, [dispatch]);\n  return isFetching ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }) : /*#__PURE__*/React.createElement(ReactMapGL, Object.assign({}, viewPort, {\n    onViewportChange: setViewPort,\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }), dataCorona.map(({\n    coordinates,\n    confirmed,\n    name\n  }, i) => /*#__PURE__*/React.createElement(Marker, {\n    key: i,\n    latitude: coordinates[0],\n    longitude: coordinates[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, confirmed > 1000 ? /*#__PURE__*/React.createElement(NumberContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, name, \":\", confirmed) : null)));\n};\n\nexport default Mark;","map":{"version":3,"sources":["/Users/vnfreedomboy/Desktop/map-react/src/component/mark/mark.js"],"names":["React","useEffect","useState","useSelector","useDispatch","ReactMapGL","Marker","selectDataCorona","selectIsFetching","fetchDataStartAsync","NumberContainer","Mark","viewPort","setViewPort","latitude","longitude","zoom","width","height","dataCorona","isFetching","dispatch","process","env","REACT_APP_MAPBOX_TOKEN","map","coordinates","confirmed","name","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,IAAqBC,MAArB,QAAmC,cAAnC;AAEA,SACCC,gBADD,EAECC,gBAFD,QAGO,iCAHP;AAKA,SAASC,mBAAT,QAAoC,+BAApC;AAEA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC;AACxCY,IAAAA,QAAQ,EAAE,IAD8B;AAExCC,IAAAA,SAAS,EAAE,CAAC,KAF4B;AAGxCC,IAAAA,IAAI,EAAE,CAHkC;AAIxCC,IAAAA,KAAK,EAAE,OAJiC;AAKxCC,IAAAA,MAAM,EAAE;AALgC,GAAD,CAAxC;AAOA,QAAMC,UAAU,GAAGhB,WAAW,CAACI,gBAAD,CAA9B;AACA,QAAMa,UAAU,GAAGjB,WAAW,CAACK,gBAAD,CAA9B;AACA,QAAMa,QAAQ,GAAGjB,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACfoB,IAAAA,QAAQ,CAACZ,mBAAmB,EAApB,CAAR;AACA,GAFQ,EAEN,CAACY,QAAD,CAFM,CAAT;AAGA,SAAOD,UAAU,gBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,gBAGhB,oBAAC,UAAD,oBACKR,QADL;AAEC,IAAA,gBAAgB,EAAEC,WAFnB;AAGC,IAAA,oBAAoB,EAAES,OAAO,CAACC,GAAR,CAAYC,sBAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKEL,UAAU,CAACM,GAAX,CAAe,CAAC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAAD,EAAmCC,CAAnC,kBACf,oBAAC,MAAD;AACC,IAAA,GAAG,EAAEA,CADN;AAEC,IAAA,QAAQ,EAAEH,WAAW,CAAC,CAAD,CAFtB;AAGC,IAAA,SAAS,EAAEA,WAAW,CAAC,CAAD,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKEC,SAAS,GAAG,IAAZ,gBACA,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEC,IADF,OACSD,SADT,CADA,GAIG,IATL,CADA,CALF,CAHD;AAuBA,CArCD;;AAuCA,eAAehB,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ReactMapGL, { Marker } from 'react-map-gl';\n\nimport {\n\tselectDataCorona,\n\tselectIsFetching\n} from '../../redux/data/data.selectors';\n\nimport { fetchDataStartAsync } from '../../redux/data/data.actions';\n\nimport { NumberContainer } from '../mark/mark.style';\n\nconst Mark = () => {\n\tconst [viewPort, setViewPort] = useState({\n\t\tlatitude: 37.8,\n\t\tlongitude: -122.4,\n\t\tzoom: 2,\n\t\twidth: '100vw',\n\t\theight: '100vh'\n\t});\n\tconst dataCorona = useSelector(selectDataCorona);\n\tconst isFetching = useSelector(selectIsFetching);\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(fetchDataStartAsync());\n\t}, [dispatch]);\n\treturn isFetching ? (\n\t\t<div />\n\t) : (\n\t\t<ReactMapGL\n\t\t\t{...viewPort}\n\t\t\tonViewportChange={setViewPort}\n\t\t\tmapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n\t\t>\n\t\t\t{dataCorona.map(({ coordinates, confirmed, name }, i) => (\n\t\t\t\t<Marker\n\t\t\t\t\tkey={i}\n\t\t\t\t\tlatitude={coordinates[0]}\n\t\t\t\t\tlongitude={coordinates[1]}\n\t\t\t\t>\n\t\t\t\t\t{confirmed > 1000 ? (\n\t\t\t\t\t\t<NumberContainer>\n\t\t\t\t\t\t\t{name}:{confirmed}\n\t\t\t\t\t\t</NumberContainer>\n\t\t\t\t\t) : null}\n\t\t\t\t</Marker>\n\t\t\t))}\n\t\t</ReactMapGL>\n\t);\n};\n\nexport default Mark;\n"]},"metadata":{},"sourceType":"module"}